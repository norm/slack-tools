#!/usr/bin/env python

import json
import os
from optparse import OptionParser
import requests
import sys
import time


GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')
SLACK_WEBHOOK = os.getenv('SLACK_WEBHOOK')
headers = {'Authorization': 'token %s' % GITHUB_TOKEN}


def get_all_user_repos():
    repos = []
    base_url = 'https://api.github.com/user/repos?affiliation=owner'
    page = 1

    while page:
        url = '%s&page=%s' % (base_url, page)
        page += 1
        response = requests.get(url, headers=headers)
        data = response.json()
        if len(data):
            for repo in data:
                repos.append(repo['full_name'])
            time.sleep(1)
        else:
            page = None

    return repos

def add_webhook(repo):
    response = requests.post(
        'https://api.github.com/repos/%s/hooks' % repo,
        headers = headers,
        data = json.dumps({
            'name': 'web',
            'active': True,
            'events': ['*'],
            'config': {
                'url': SLACK_WEBHOOK,
                'content_type': 'json',
            },
        })
    )
    print response, response.json()


def delete_webhooks(repo):
    response = requests.get(
        'https://api.github.com/repos/%s/hooks' % repo,
        headers = headers,
    )
    hooks = response.json()
    for hook in hooks:
        url = hook['url']
        print url
        response = requests.delete(
            url,
            headers = headers,
        )
        print response


parser = OptionParser()
parser.add_option(
    '-u', '--user', dest='user', help='Apply to all user repositories',
    action='store_true')
parser.add_option(
    '-d', '--delete', dest='delete', help='Delete webhooks',
    action='store_true')
(options, args) = parser.parse_args()

if options.user:
    args = get_all_user_repos()

for repo in args:
    if options.delete:
        delete_webhooks(repo)
    else:
        add_webhook(repo)
